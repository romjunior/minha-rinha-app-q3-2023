version: "3.7"
services:
  lb:
    image: nginx:latest
    depends_on:
      minharinha1:
        condition: service_healthy
      minharinha2:
        condition: service_healthy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: '300MB'
    network_mode: 'host'
  minharinha1:
    image: minha-rinha-app
    hostname: minharinha1
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl 127.0.0.1:8080"]
      interval: 3s
      timeout: 5s
      retries: 20
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1GB'
    environment:
      RINHA_DB_ADDRESS: 127.0.0.1
      RINHA_DB: rinhadb
      RINHA_DB_USER: rinha
      RINHA_DB_PASSWORD: rinha123
      SPRING_PORT: 8080
      RINHA_DB_MAX_POOL: 25
      JAVA_TOOL_OPTIONS: "-verbose:gc -Xmx820M -Xms820M -XX:+UnlockExperimentalVMOptions -XX:+AlwaysPreTouch"
    network_mode: 'host'
  minharinha2:
    image: minha-rinha-app
    hostname: minharinha2
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl 127.0.0.1:8081" ]
      interval: 3s
      timeout: 5s
      retries: 20
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1GB'
    environment:
      RINHA_DB_ADDRESS: 127.0.0.1
      RINHA_DB: rinhadb
      RINHA_DB_USER: rinha
      RINHA_DB_PASSWORD: rinha123
      SPRING_PORT: 8081
      RINHA_DB_MAX_POOL: 25
      JAVA_TOOL_OPTIONS: "-verbose:gc -Xmx820M -Xms820M -XX:+UnlockExperimentalVMOptions -XX:+AlwaysPreTouch"
    network_mode: 'host'
  postgres:
    image: postgres:16.0
    environment:
      POSTGRES_USER: rinha
      POSTGRES_PASSWORD: rinha123
      POSTGRES_DB: rinhadb
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '700MB'
    network_mode: 'host'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
networks:
  rinha-network: